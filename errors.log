    Checking num_rs v0.1.0 (/home/arch470/numrs)
error: expected one of `!` or `::`, found keyword `use`
 --> src/chebpc.rs:2:1
  |
1 | std::simd::prelude::SimdFloat
  |                              - expected one of `!` or `::`
2 | use std::ptr;
  | ^^^ unexpected token

error[E0432]: unresolved imports `ndarray::Array2`, `ndarray::ArrayView2`
 --> src/bcucof.rs:1:15
  |
1 | use ndarray::{Array2, ArrayView2};
  |               ^^^^^^  ^^^^^^^^^^
  |               |       |
  |               |       no `ArrayView2` in the root
  |               |       help: a similar name exists in the module: `ArrayView`
  |               no `Array2` in the root

error[E0432]: unresolved import `ndarray::Array2`
 --> src/bcuint.rs:2:5
  |
2 | use ndarray::Array2;  // Add this import
  |     ^^^^^^^^^^^^^^^ no `Array2` in the root

error[E0432]: unresolved import `std::f64::consts::FRAC_1_3`
 --> src/Carlson_elliptical_integral_degenerate.rs:3:5
  |
3 | use std::f64::consts::FRAC_1_3;
  |     ^^^^^^^^^^^^^^^^^^--------
  |     |                 |
  |     |                 help: a similar name exists in the module: `FRAC_PI_3`
  |     no `FRAC_1_3` in `f64::consts`

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::ArrayView1`
 --> src/chebyshev_approx.rs:4:15
  |
4 | use ndarray::{Array1, ArrayView1};
  |               ^^^^^^  ^^^^^^^^^^
  |               |       |
  |               |       no `ArrayView1` in the root
  |               |       help: a similar name exists in the module: `ArrayView`
  |               no `Array1` in the root

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::ArrayView1`, `ndarray::ArrayViewMut1`
 --> src/chebyshev_calc.rs:4:15
  |
4 | use ndarray::{Array1, ArrayView1, ArrayViewMut1};
  |               ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^ no `ArrayViewMut1` in the root
  |               |       |
  |               |       no `ArrayView1` in the root
  |               no `Array1` in the root
  |
help: a similar name exists in the module
  |
4 - use ndarray::{Array1, ArrayView1, ArrayViewMut1};
4 + use ndarray::{Array1, ArrayView, ArrayViewMut1};
  |
help: a similar name exists in the module
  |
4 - use ndarray::{Array1, ArrayView1, ArrayViewMut1};
4 + use ndarray::{Array1, ArrayView1, ArrayViewMut};
  |

error[E0432]: unresolved import `ndarray::Array1`
 --> src/Convolve.rs:3:15
  |
3 | use ndarray::{Array1, ArrayView, ArrayViewMut, s};
  |               ^^^^^^ no `Array1` in the root

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::ArrayView1`, `ndarray::ArrayViewMut1`
 --> src/Correlation.rs:3:15
  |
3 | use ndarray::{Array1, ArrayView1, ArrayViewMut1, s};
  |               ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^ no `ArrayViewMut1` in the root
  |               |       |
  |               |       no `ArrayView1` in the root
  |               no `Array1` in the root
  |
help: a similar name exists in the module
  |
3 - use ndarray::{Array1, ArrayView1, ArrayViewMut1, s};
3 + use ndarray::{Array1, ArrayView, ArrayViewMut1, s};
  |
help: a similar name exists in the module
  |
3 - use ndarray::{Array1, ArrayView1, ArrayViewMut1, s};
3 + use ndarray::{Array1, ArrayView1, ArrayViewMut, s};
  |

error[E0432]: unresolved import `std::f64::consts::EULER`
 --> src/Cosine_Sine_Integrals.rs:3:28
  |
3 | use std::f64::consts::{PI, EULER};
  |                            ^^^^^ no `EULER` in `f64::consts`

error[E0432]: unresolved import `std::f64::consts::EULER`
 --> src/ei.rs:1:5
  |
1 | use std::f64::consts::EULER;
  |     ^^^^^^^^^^^^^^^^^^^^^^^ no `EULER` in `f64::consts`

error[E0432]: unresolved import `std::f64::consts::EPSILON`
 --> src/elementary_integration_methods.rs:1:5
  |
1 | use std::f64::consts::EPSILON;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ no `EPSILON` in `f64::consts`

error[E0432]: unresolved import `std::f64::consts::EULER`
 --> src/exponential_integral.rs:1:5
  |
1 | use std::f64::consts::EULER;
  |     ^^^^^^^^^^^^^^^^^^^^^^^ no `EULER` in `f64::consts`

error[E0432]: unresolved import `std::f64::consts::EPSILON`
 --> src/linbcg.rs:1:5
  |
1 | use std::f64::consts::EPSILON;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ no `EPSILON` in `f64::consts`

error[E0432]: unresolved imports `ndarray::Array2`, `ndarray::Array1`
 --> src/orthog.rs:1:15
  |
1 | use ndarray::{Array2, Array1};
  |               ^^^^^^  ^^^^^^ no `Array1` in the root
  |               |
  |               no `Array2` in the root

error[E0432]: unresolved imports `ndarray::Array2`, `ndarray::Array1`, `ndarray::ArrayView2`, `ndarray::ArrayView1`
 --> src/pade.rs:2:15
  |
2 | use ndarray::{Array2, Array1, ArrayView2, ArrayView1};
  |               ^^^^^^  ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^ no `ArrayView1` in the root
  |               |       |       |
  |               |       |       no `ArrayView2` in the root
  |               |       no `Array1` in the root
  |               no `Array2` in the root
  |
help: a similar name exists in the module
  |
2 - use ndarray::{Array2, Array1, ArrayView2, ArrayView1};
2 + use ndarray::{Array2, Array1, ArrayView, ArrayView1};
  |
help: a similar name exists in the module
  |
2 - use ndarray::{Array2, Array1, ArrayView2, ArrayView1};
2 + use ndarray::{Array2, Array1, ArrayView2, ArrayView};
  |

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::ArrayView1`
 --> src/polcof.rs:3:15
  |
3 | use ndarray::{Array1, ArrayView1};
  |               ^^^^^^  ^^^^^^^^^^
  |               |       |
  |               |       no `ArrayView1` in the root
  |               |       help: a similar name exists in the module: `ArrayView`
  |               no `Array1` in the root

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::ArrayView1`, `ndarray::ArrayViewMut1`
 --> src/polydiv.rs:4:15
  |
4 | use ndarray::{Array1, ArrayView1, ArrayViewMut1};
  |               ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^ no `ArrayViewMut1` in the root
  |               |       |
  |               |       no `ArrayView1` in the root
  |               no `Array1` in the root
  |
help: a similar name exists in the module
  |
4 - use ndarray::{Array1, ArrayView1, ArrayViewMut1};
4 + use ndarray::{Array1, ArrayView, ArrayViewMut1};
  |
help: a similar name exists in the module
  |
4 - use ndarray::{Array1, ArrayView1, ArrayViewMut1};
4 + use ndarray::{Array1, ArrayView1, ArrayViewMut};
  |

error[E0432]: unresolved import `std::f64::consts::EPSILON`
 --> src/qrdcmp.rs:3:5
  |
3 | use std::f64::consts::EPSILON as F64_EPSILON;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `EPSILON` in `f64::consts`

error[E0432]: unresolved imports `ndarray::Array2`, `ndarray::Array1`, `ndarray::ArrayView2`, `ndarray::ArrayView1`
 --> src/ratlsq.rs:2:15
  |
2 | use ndarray::{Array2, Array1, ArrayView2, ArrayView1};
  |               ^^^^^^  ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^ no `ArrayView1` in the root
  |               |       |       |
  |               |       |       no `ArrayView2` in the root
  |               |       no `Array1` in the root
  |               no `Array2` in the root
  |
help: a similar name exists in the module
  |
2 - use ndarray::{Array2, Array1, ArrayView2, ArrayView1};
2 + use ndarray::{Array2, Array1, ArrayView, ArrayView1};
  |
help: a similar name exists in the module
  |
2 - use ndarray::{Array2, Array1, ArrayView2, ArrayView1};
2 + use ndarray::{Array2, Array1, ArrayView2, ArrayView};
  |

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::ArrayView1`
 --> src/ratval.rs:4:15
  |
4 | use ndarray::{Array1, ArrayView1};
  |               ^^^^^^  ^^^^^^^^^^
  |               |       |
  |               |       no `ArrayView1` in the root
  |               |       help: a similar name exists in the module: `ArrayView`
  |               no `Array1` in the root

error[E0432]: unresolved imports `ndarray::Array3`, `ndarray::Array2`, `ndarray::ArrayViewMut3`, `ndarray::ArrayViewMut2`
 --> src/Real_FT3.rs:3:15
  |
3 | use ndarray::{Array3, Array2, ArrayViewMut3, ArrayViewMut2};
  |               ^^^^^^  ^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^ no `ArrayViewMut2` in the root
  |               |       |       |
  |               |       |       no `ArrayViewMut3` in the root
  |               |       no `Array2` in the root
  |               no `Array3` in the root
  |
help: a similar name exists in the module
  |
3 - use ndarray::{Array3, Array2, ArrayViewMut3, ArrayViewMut2};
3 + use ndarray::{Array3, Array2, ArrayViewMut, ArrayViewMut2};
  |
help: a similar name exists in the module
  |
3 - use ndarray::{Array3, Array2, ArrayViewMut3, ArrayViewMut2};
3 + use ndarray::{Array3, Array2, ArrayViewMut3, ArrayViewMut};
  |

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::Array2`
 --> src/Recursive_Stratified_Sampling.rs:4:15
  |
4 | use ndarray::{Array1, Array2};
  |               ^^^^^^  ^^^^^^ no `Array2` in the root
  |               |
  |               no `Array1` in the root

error[E0432]: unresolved imports `ndarray::Array2`, `ndarray::Array1`, `ndarray::ArrayView1`, `ndarray::ArrayViewMut1`
 --> src/splie2.rs:1:15
  |
1 | use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut1};
  |               ^^^^^^  ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^ no `ArrayViewMut1` in the root
  |               |       |       |
  |               |       |       no `ArrayView1` in the root
  |               |       no `Array1` in the root
  |               no `Array2` in the root
  |
help: a similar name exists in the module
  |
1 - use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut1};
1 + use ndarray::{Array2, Array1, ArrayView, ArrayViewMut1};
  |
help: a similar name exists in the module
  |
1 - use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut1};
1 + use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut};
  |

error[E0432]: unresolved imports `ndarray::Array2`, `ndarray::Array1`, `ndarray::ArrayView1`, `ndarray::ArrayViewMut1`
 --> src/splin2.rs:1:15
  |
1 | use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut1};
  |               ^^^^^^  ^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^ no `ArrayViewMut1` in the root
  |               |       |       |
  |               |       |       no `ArrayView1` in the root
  |               |       no `Array1` in the root
  |               no `Array2` in the root
  |
help: a similar name exists in the module
  |
1 - use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut1};
1 + use ndarray::{Array2, Array1, ArrayView, ArrayViewMut1};
  |
help: a similar name exists in the module
  |
1 - use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut1};
1 + use ndarray::{Array2, Array1, ArrayView1, ArrayViewMut};
  |

error[E0432]: unresolved imports `ndarray::Array1`, `ndarray::Array2`
 --> src/utils.rs:1:15
  |
1 | use ndarray::{Array1, Array2};
  |               ^^^^^^  ^^^^^^ no `Array2` in the root
  |               |
  |               no `Array1` in the root

error[E0432]: unresolved imports `bessel_j::bessel_j0`, `bessel_j::bessel_j1`, `bessel_j::bessel_jn`
   --> src/lib.rs:116:20
    |
116 | pub use bessel_j::{bessel_j0, bessel_j1, bessel_jn};
    |                    ^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^ no `bessel_jn` in `bessel_j`
    |                    |          |
    |                    |          no `bessel_j1` in `bessel_j`
    |                    no `bessel_j0` in `bessel_j`
    |
note: these modules exist but are inaccessible
   --> src/bessel_yn.rs:128:1
    |
128 | mod bessel_j0 {
    | ^^^^^^^^^^^^^ `crate::bessel_yn::bessel_j0`: not accessible
    |
   ::: src/bessy0.rs:6:1
    |
6   | mod bessel_j0 {
    | ^^^^^^^^^^^^^ `crate::bessy0::bessel_j0`: not accessible
note: these modules exist but are inaccessible
   --> src/bessel_y1.rs:8:1
    |
8   | mod bessel_j1 {
    | ^^^^^^^^^^^^^ `crate::bessel_y1::bessel_j1`: not accessible
    |
   ::: src/bessel_yn.rs:182:1
    |
182 | mod bessel_j1 {
    | ^^^^^^^^^^^^^ `crate::bessel_yn::bessel_j1`: not accessible
help: a similar name exists in the module
    |
116 - pub use bessel_j::{bessel_j0, bessel_j1, bessel_jn};
116 + pub use bessel_j::{bessj0, bessel_j1, bessel_jn};
    |
help: a similar name exists in the module
    |
116 - pub use bessel_j::{bessel_j0, bessel_j1, bessel_jn};
116 + pub use bessel_j::{bessel_j0, bessj1, bessel_jn};
    |

error[E0432]: unresolved import `beta::ln_beta`
   --> src/lib.rs:118:22
    |
118 | pub use beta::{beta, ln_beta};
    |                      ^^^^^^^ no `ln_beta` in `beta`

error[E0432]: unresolved import `crossbeam`
   --> src/Fourn.rs:166:9
    |
166 |     use crossbeam::thread;
    |         ^^^^^^^^^ use of unresolved module or unlinked crate `crossbeam`
    |
    = help: if you wanted to use a crate named `crossbeam`, use `cargo add crossbeam` to add it to your `Cargo.toml`

error[E0432]: unresolved import `special`
 --> src/gaujac.rs:5:5
  |
5 | use special::Gamma;
  |     ^^^^^^^ use of unresolved module or unlinked crate `special`
  |
  = help: if you wanted to use a crate named `special`, use `cargo add special` to add it to your `Cargo.toml`

error[E0432]: unresolved import `special`
 --> src/gaulag.rs:5:5
  |
5 | use special::Gamma;
  |     ^^^^^^^ use of unresolved module or unlinked crate `special`
  |
  = help: if you wanted to use a crate named `special`, use `cargo add special` to add it to your `Cargo.toml`

error[E0432]: unresolved import `sprs`
 --> src/sprspm.rs:1:5
  |
1 | use sprs::{CsMat, CsVec};
  |     ^^^^ use of unresolved module or unlinked crate `sprs`
  |
  = help: if you wanted to use a crate named `sprs`, use `cargo add sprs` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `airy::ai`, `airy::bi`, `airy::ai_deriv`, `airy::bi_deriv`
   --> src/lib.rs:115:16
    |
115 | pub use airy::{ai, bi, ai_deriv, bi_deriv};
    |                ^^  ^^  ^^^^^^^^  ^^^^^^^^ no `bi_deriv` in `airy`
    |                |   |   |
    |                |   |   no `ai_deriv` in `airy`
    |                |   no `bi` in `airy`
    |                no `ai` in `airy`

error[E0432]: unresolved import `bessel_y1::bessel_y1`
   --> src/lib.rs:117:9
    |
117 | pub use bessel_y1::bessel_y1;
    |         ^^^^^^^^^^^---------
    |         |          |
    |         |          help: a similar name exists in the module: `bessel_j1`
    |         no `bessel_y1` in `bessel_y1`

error[E0433]: failed to resolve: use of undeclared type `Arc`
   --> src/beschd.rs:170:19
    |
170 |     let results = Arc::new(Mutex::new(Vec::with_capacity(x_values.len())));
    |                   ^^^ use of undeclared type `Arc`
    |
help: consider importing this struct
    |
1   + use std::sync::Arc;
    |

error[E0433]: failed to resolve: use of undeclared type `Mutex`
   --> src/beschd.rs:170:28
    |
170 |     let results = Arc::new(Mutex::new(Vec::with_capacity(x_values.len())));
    |                            ^^^^^ use of undeclared type `Mutex`
    |
help: consider importing this struct
    |
1   + use std::sync::Mutex;
    |

error[E0433]: failed to resolve: use of undeclared type `Arc`
   --> src/beschd.rs:175:27
    |
175 |         let results_ref = Arc::clone(&results);
    |                           ^^^ use of undeclared type `Arc`
    |
help: consider importing this struct
    |
1   + use std::sync::Arc;
    |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `thread`
   --> src/beschd.rs:177:22
    |
177 |         handles.push(thread::spawn(move || {
    |                      ^^^^^^ use of unresolved module or unlinked crate `thread`
    |
    = help: if you wanted to use a crate named `thread`, use `cargo add thread` to add it to your `Cargo.toml`
help: consider importing this module
    |
1   + use std::thread;
    |

error[E0433]: failed to resolve: use of undeclared type `Arc`
   --> src/beschd.rs:193:5
    |
193 |     Arc::try_unwrap(results)
    |     ^^^ use of undeclared type `Arc`
    |
help: consider importing this struct
    |
1   + use std::sync::Arc;
    |

error[E0405]: cannot find trait `BesselFloat` in this scope
 --> src/bessel_k0.rs:9:8
  |
9 |     T: BesselFloat,
  |        ^^^^^^^^^^^ not found in this scope
  |
help: consider importing one of these traits
  |
1 + use crate::beschd::BesselFloat;
  |
1 + use crate::bessel_I1::BesselFloat;
  |
1 + use crate::bessel_i::BesselFloat;
  |
1 + use crate::bessel_j::BesselFloat;
  |
    and 3 other candidates

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:21:20
    |
21  |         let poly = polynomial_eval(
    |                    ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:41:20
    |
41  |         let poly = polynomial_eval(
    |                    ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0405]: cannot find trait `BesselFloat` in this scope
  --> src/bessel_k0.rs:61:8
   |
61 |     T: BesselFloat,
   |        ^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these traits
   |
1  + use crate::beschd::BesselFloat;
   |
1  + use crate::bessel_I1::BesselFloat;
   |
1  + use crate::bessel_i::BesselFloat;
   |
1  + use crate::bessel_j::BesselFloat;
   |
     and 3 other candidates

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:67:9
    |
67  |         polynomial_eval(
    |         ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:81:9
    |
81  |         polynomial_eval(
    |         ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0405]: cannot find trait `BesselFloat` in this scope
   --> src/bessel_k0.rs:101:8
    |
101 |     T: BesselFloat,
    |        ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these traits
    |
1   + use crate::beschd::BesselFloat;
    |
1   + use crate::bessel_I1::BesselFloat;
    |
1   + use crate::bessel_i::BesselFloat;
    |
1   + use crate::bessel_j::BesselFloat;
    |
      and 3 other candidates

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:107:13
    |
107 |         x * polynomial_eval(
    |             ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:121:22
    |
121 |         let result = polynomial_eval(
    |                      ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0405]: cannot find trait `BesselFloat` in this scope
   --> src/bessel_k0.rs:147:8
    |
147 |     T: BesselFloat,
    |        ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these traits
    |
1   + use crate::beschd::BesselFloat;
    |
1   + use crate::bessel_I1::BesselFloat;
    |
1   + use crate::bessel_i::BesselFloat;
    |
1   + use crate::bessel_j::BesselFloat;
    |
      and 3 other candidates

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:157:20
    |
157 |         let poly = polynomial_eval(
    |                    ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0425]: cannot find function `polynomial_eval` in this scope
   --> src/bessel_k0.rs:174:20
    |
174 |         let poly = polynomial_eval(
    |                    ^^^^^^^^^^^^^^^ not found in this scope
    |
note: these functions exist but are inaccessible
    |
   ::: src/bessel_I1.rs:238:1
    |
238 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
239 | | where
240 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
246 | |     result
247 | | }
    | |_^ `crate::bessel_I1::polynomial_eval`: not accessible
    |
   ::: src/bessel_j.rs:268:1
    |
268 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
269 | | where
270 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
276 | |     result
277 | | }
    | |_^ `crate::bessel_j::polynomial_eval`: not accessible
    |
   ::: src/bessel_k1.rs:322:1
    |
322 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
323 | | where
324 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
330 | |     result
331 | | }
    | |_^ `crate::bessel_k1::polynomial_eval`: not accessible
   --> src/bessel_i.rs:359:1
    |
359 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
360 | | where
361 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
367 | |     result
368 | | }
    | |_^ `crate::bessel_i::polynomial_eval`: not accessible
    |
   ::: src/bessel_k.rs:400:1
    |
400 | / fn polynomial_eval<T>(x: T, coeffs: &[T]) -> T
401 | | where
402 | |     T: BesselFloat + std::ops::Add<Output = T> + std::ops::Mul<Output = T>,
...   |
408 | |     result
409 | | }
    | |_^ `crate::bessel_k::polynomial_eval`: not accessible

error[E0405]: cannot find trait `BesselFloat` in this scope
   --> src/bessel_k0.rs:194:8
    |
194 |     T: BesselFloat,
    |        ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these traits
    |
1   + use crate::beschd::BesselFloat;
    |
1   + use crate::bessel_I1::BesselFloat;
    |
1   + use crate::bessel_i::BesselFloat;
    |
1   + use crate::bessel_j::BesselFloat;
    |
      and 3 other candidates

error[E0405]: cannot find trait `BesselFloat` in this scope
   --> src/bessel_k0.rs:226:8
    |
226 |     T: BesselFloat + Send + Sync + 'static,
    |        ^^^^^^^^^^^ not found in this scope
    |
help: consider importing one of these traits
    |
1   + use crate::beschd::BesselFloat;
    |
1   + use crate::bessel_I1::BesselFloat;
    |
1   + use crate::bessel_i::BesselFloat;
    |
1   + use crate::bessel_j::BesselFloat;
    |
      and 3 other candidates

error[E0425]: cannot find function `chebev` in this scope
   --> src/chebyshev_calc.rs:214:28
    |
214 |         let approx_deriv = chebev(a, b, &cder, x);
    |                            ^^^^^^ not found in this scope
    |
help: consider importing one of these functions
    |
1   + use crate::beschd::chebev;
    |
1   + use crate::chebyshev_approx::chebev;
    |

error[E0425]: cannot find function `chebev` in this scope
   --> src/chebyshev_calc.rs:228:31
    |
228 |         let approx_integral = chebev(a, b, &cint, x);
    |                               ^^^^^^ not found in this scope
    |
help: consider importing one of these functions
    |
1   + use crate::beschd::chebev;
    |
1   + use crate::chebyshev_approx::chebev;
    |

error[E0433]: failed to resolve: use of undeclared type `Ordering`
   --> src/Cos_FT.rs:127:69
    |
127 |     let atomic_sum_bits = std::sync::atomic::AtomicU64::new(0).load(Ordering::Relaxed);
    |                                                                     ^^^^^^^^ use of undeclared type `Ordering`
    |
help: consider importing one of these enums
    |
1   + use std::cmp::Ordering;
    |
1   + use std::sync::atomic::Ordering;
    |

error[E0412]: cannot find type `F64` in this scope
   --> src/frenel.rs:260:21
    |
260 |     pub errors: Vec<F64>,
    |                     ^^^
    |
help: a builtin type with a similar name exists (notice the capitalization difference)
    |
260 -     pub errors: Vec<F64>,
260 +     pub errors: Vec<f64>,
    |
help: you might be missing a type parameter
    |
258 | pub struct FresnelBenchmark<F64> {
    |                            +++++

error[E0425]: cannot find function `midsql_lower_singularity` in this scope
   --> src/midsqu.rs:165:24
    |
148 | / pub fn midsqu_lower_singularity<F>(funk: F, a: f64, b: f64, n: usize) -> IntegrationResult<f64>
149 | | where
150 | |     F: Fn(f64) -> f64,
...   |
157 | |     midsqu(transformed_func, a, b, n)
158 | | }
    | |_- similarly named function `midsqu_lower_singularity` defined here
...
165 |       let lower_result = midsql_lower_singularity(&funk, a, b, n)?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: a function with a similar name exists
    |
165 -     let lower_result = midsql_lower_singularity(&funk, a, b, n)?;
165 +     let lower_result = midsqu_lower_singularity(&funk, a, b, n)?;
    |
help: consider importing this function
    |
1   + use crate::midsql::midsql_lower_singularity;
    |

warning: unexpected `cfg` condition value: `bench`
   --> src/airy.rs:717:7
    |
717 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `std::mem`
 --> src/bandec.rs:1:5
  |
1 | use std::mem;
  |     ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ndarray::prelude::*`
 --> src/bcuint.rs:1:5
  |
1 | use ndarray::prelude::*;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `approx::assert_abs_diff_eq`
 --> src/bcuint.rs:4:5
  |
4 | use approx::assert_abs_diff_eq;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::f64::consts`
 --> src/bessel_I1.rs:1:5
  |
1 | use std::f64::consts;
  |     ^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/bessel_j1.rs:423:7
    |
423 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `PI`
 --> src/bessel_j1.rs:1:24
  |
1 | use std::f64::consts::{PI, FRAC_PI_4};
  |                        ^^

warning: unnecessary parentheses around assigned value
   --> src/bessel_jy.rs:172:14
    |
172 |         p /= (i_f64 - xmu);
    |              ^           ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
172 -         p /= (i_f64 - xmu);
172 +         p /= i_f64 - xmu;
    |

warning: unnecessary parentheses around assigned value
   --> src/bessel_jy.rs:173:14
    |
173 |         q /= (i_f64 + xmu);
    |              ^           ^
    |
help: remove these parentheses
    |
173 -         q /= (i_f64 + xmu);
173 +         q /= i_f64 + xmu;
    |

warning: unused import: `std::f64::consts`
 --> src/bessel_k0.rs:1:5
  |
1 | use std::f64::consts;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `std::f64::consts`
 --> src/bessel_k1.rs:1:5
  |
1 | use std::f64::consts;
  |     ^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/bessel_y1.rs:550:7
    |
550 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `PI`
 --> src/bessel_y1.rs:1:24
  |
1 | use std::f64::consts::{PI, FRAC_PI_4};
  |                        ^^

warning: unused import: `super::*`
 --> src/bessel_y1.rs:9:9
  |
9 |     use super::*;
  |         ^^^^^^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/bessel_yn.rs:583:7
    |
583 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `super::*`
 --> src/bessel_yn.rs:7:9
  |
7 |     use super::*;
  |         ^^^^^^^^

warning: unused import: `super::*`
  --> src/bessel_yn.rs:67:9
   |
67 |     use super::*;
   |         ^^^^^^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/bessik.rs:471:7
    |
471 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `FRAC_PI_2`
 --> src/bessik.rs:1:28
  |
1 | use std::f64::consts::{PI, FRAC_PI_2};
  |                            ^^^^^^^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/bessj0.rs:390:7
    |
390 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `bench`
   --> src/bessy0.rs:515:7
    |
515 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `bench`
   --> src/beta.rs:184:7
    |
184 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `std::f32::consts::LN_2`
 --> src/beta.rs:1:5
  |
1 | use std::f32::consts::LN_2;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> src/beta.rs:2:5
  |
2 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::sync::OnceLock`
 --> src/Carlson_elliptic_integral_first.rs:4:5
  |
4 | use std::sync::OnceLock;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::f64::consts::PI`
 --> src/Convolve.rs:1:5
  |
1 | use std::f64::consts::PI;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ArrayViewMut` and `ArrayView`
 --> src/Convolve.rs:3:23
  |
3 | use ndarray::{Array1, ArrayView, ArrayViewMut, s};
  |                       ^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `SQRT_2`
 --> src/dawson_integral.rs:3:28
  |
3 | use std::f64::consts::{PI, SQRT_2};
  |                            ^^^^^^

warning: unused import: `Arc`
 --> src/ddpoly.rs:2:17
  |
2 | use std::sync::{Arc, Mutex};
  |                 ^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/ei.rs:315:7
    |
315 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `bench`
   --> src/error_functions.rs:440:7
    |
440 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `SQRT_2`
 --> src/error_functions.rs:1:28
  |
1 | use std::f32::consts::{PI, SQRT_2};
  |                            ^^^^^^

warning: unused doc comment
  --> src/eulsum.rs:92:1
   |
92 | /// Thread-local Euler summation for better performance in single-threaded contexts
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ rustdoc does not generate documentation for macro invocations
   |
   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion
   = note: `#[warn(unused_doc_comments)]` on by default

warning: unused import: `Arc`
 --> src/eulsum.rs:1:17
  |
1 | use std::sync::{Arc, Mutex, RwLock};
  |                 ^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/exponential_integral.rs:313:7
    |
313 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused imports: `Arc` and `Mutex`
 --> src/Four_FS.rs:6:17
  |
6 | use std::sync::{Arc, Mutex};
  |                 ^^^  ^^^^^

warning: unused imports: `AtomicU64` and `Ordering`
 --> src/Fourn.rs:3:25
  |
3 | use std::sync::atomic::{AtomicU64, Ordering};
  |                         ^^^^^^^^^  ^^^^^^^^

warning: unused import: `std::arch::x86_64::*`
   --> src/Fourn.rs:126:9
    |
126 |     use std::arch::x86_64::*;
    |         ^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/gamma_continued_funciton.rs:335:7
    |
335 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `E`
 --> src/gamma_continued_funciton.rs:1:24
  |
1 | use std::f32::consts::{E, PI};
  |                        ^

warning: unexpected `cfg` condition value: `bench`
   --> src/gamma_series.rs:329:7
    |
329 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused imports: `E` and `LN_2`
 --> src/gamma_series.rs:1:24
  |
1 | use std::f32::consts::{E, LN_2, PI};
  |                        ^  ^^^^

warning: unused doc comment
  --> src/gammln.rs:23:1
   |
23 | /// Thread-local cache for frequently computed values
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ rustdoc does not generate documentation for macro invocations
   |
   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion

warning: unused import: `std::mem`
 --> src/gaussjdcp.rs:1:5
  |
1 | use std::mem;
  |     ^^^^^^^^

warning: unexpected `cfg` condition value: `bench`
   --> src/inc_beta_func.rs:398:7
    |
398 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `E`
 --> src/inc_beta_func.rs:1:24
  |
1 | use std::f64::consts::{E, PI};
  |                        ^

warning: unexpected `cfg` condition value: `bench`
   --> src/incomplete_gamma.rs:326:7
    |
326 | #[cfg(feature = "bench")]
    |       ^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `bench` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `E`
 --> src/incomplete_gamma.rs:1:24
  |
1 | use std::f32::consts::{E, PI};
  |                        ^

warning: unused import: `std::f64::consts::FRAC_1_PI`
 --> src/Jacobian_elliptical.rs:2:5
  |
2 | use std::f64::consts::FRAC_1_PI;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Arc`
 --> src/pade.rs:3:17
  |
3 | use std::sync::{Arc, Mutex};
  |                 ^^^

warning: unused import: `std::ptr`
 --> src/pccheb.rs:2:5
  |
2 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `Arc`
 --> src/polydiv.rs:2:17
  |
2 | use std::sync::{Arc, Mutex};
  |                 ^^^

warning: unused import: `rayon::prelude::*`
 --> src/quad3d.rs:1:5
  |
1 | use rayon::prelude::*;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `Mutex`
 --> src/quad3d.rs:2:22
  |
2 | use std::sync::{Arc, Mutex};
  |                      ^^^^^

warning: unused import: `std::f64::consts::PI`
 --> src/quad3d.rs:3:5
  |
3 | use std::f64::consts::PI;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Arc`
 --> src/random_0.rs:3:17
  |
3 | use std::sync::{Arc, Mutex};
  |                 ^^^

warning: unexpected `cfg` condition value: `std`
   --> src/random_0.rs:141:11
    |
141 |     #[cfg(feature = "std")]
    |           ^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `std` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `Arc`
 --> src/random_1.rs:2:17
  |
2 | use std::sync::{Arc, Mutex};
  |                 ^^^

warning: unused import: `lazy_static::lazy_static`
 --> src/random_1.rs:3:5
  |
3 | use lazy_static::lazy_static;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `std`
   --> src/random_1.rs:213:11
    |
213 |     #[cfg(feature = "std")]
    |           ^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `std` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `Arc`
 --> src/random_2.rs:2:17
  |
2 | use std::sync::{Arc, Mutex};
  |                 ^^^

warning: unused import: `lazy_static::lazy_static`
 --> src/random_2.rs:3:5
  |
3 | use lazy_static::lazy_static;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `std`
   --> src/random_2.rs:281:11
    |
281 |     #[cfg(feature = "std")]
    |           ^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `std` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `Arc`
 --> src/random_3.rs:2:17
  |
2 | use std::sync::{Arc, Mutex};
  |                 ^^^

warning: unused import: `lazy_static::lazy_static`
 --> src/random_3.rs:3:5
  |
3 | use lazy_static::lazy_static;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `std`
   --> src/random_3.rs:260:11
    |
260 |     #[cfg(feature = "std")]
    |           ^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `async` and `tokio`
    = help: consider adding `std` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `std::f64::consts`
 --> src/Recursive_Stratified_Sampling.rs:7:5
  |
7 | use std::f64::consts;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `std::f64::consts::*`
   --> src/lib.rs:191:13
    |
191 |     pub use std::f64::consts::*;
    |             ^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0405, E0412, E0425, E0432, E0433.
For more information about an error, try `rustc --explain E0405`.
warning: `num_rs` (lib) generated 68 warnings
error: could not compile `num_rs` (lib) due to 57 previous errors; 68 warnings emitted
